package com.swisscom.aem.tools.jcrhopper.config;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import org.slf4j.Marker;

/**
 * Interface for a listener that gets notified of events that happen during the script run.
 * <p>
 * The evens can be: string output, log output or file output
 */
public interface RunHandler {
	/**
	 * A file has been generated by the script.
	 *
	 * @param file the file that has been generated
	 */
	void file(@Nonnull File file);

	/**
	 * A log message has been generated by the script.
	 * <p>
	 * Log messages are already filtered according to the scriptâ€™s log level.
	 *
	 * @param level     the level of the log message
	 * @param message   the log message itself
	 * @param throwable the throwable that was passed to the logger, if any
	 * @param marker    the marker that was passed to the log call or null if the log call was unmarked
	 */
	void log(@Nonnull LogLevel level, @Nonnull String message, @Nullable Throwable throwable, @Nullable Marker marker);

	/**
	 * Plain text output has been generated by the script.
	 *
	 * @param message the text that was output
	 */
	void print(@Nullable String message);
}
